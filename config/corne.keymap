/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
  };

  combos {
    compatible = "zmk,combos";
  };

  macros {
    pwd_macro: pwd_macro {
      compatible = "zmk,behavior-macro";
      label = "PWD_MACRO";
      #binding-cells = <0>;
      bindings = <&kp LS(M) &kp Y &kp LS(N) &kp A &kp M &kp E &kp LS(I) &kp S &kp LS(G) &kp I &kp L &kp B &kp E &kp R &kp T &kp O &kp LS(A) &kp N &kp D &kp LS(M) &kp Y &kp LS(G) &kp I &kp R &kp L &kp F &kp R &kp I &kp E &kp N &kp D &kp LS(I) &kp S &kp LS(M) &kp E &kp L &kp I &kp S &kp S &kp A>;
    };
    apex_macro: apex_macro {
      compatible = "zmk,behavior-macro";
      label = "APEX_MACRO";
      #binding-cells = <0>;
      bindings = <&kp LS(U) &kp N &kp B &kp R &kp O &kp K &kp E &kp N &kp MINUS &kp LS(J) &kp O &kp L &kp L &kp I &kp N &kp E &kp S &kp S &kp MINUS &kp LS(S) &kp Q &kp U &kp E &kp A &kp L &kp E &kp R &kp EXCL>;
    };
    apex_it_macro: apex_it_macro {
      compatible = "zmk,behavior-macro";
      label = "APEX_IT_MACRO";
      #binding-cells = <0>;
      bindings = <&kp LS(W) &kp E &kp L &kp C &kp O &kp M &kp E &kp N1>;
    };
    walmart_macro: walmart_macro {
      compatible = "zmk,behavior-macro";
      label = "WALMART_MACRO";
      #binding-cells = <0>;
      bindings = <&kp N6 &kp AMPS &kp LS(N) &kp LS(W) &kp E &kp CARET &kp LS(N) &kp N2 &kp B &kp POUND &kp LS(W) &kp N3 &kp LS(D) &kp DLLR &kp N3 &kp O &kp H>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    qwerty {
      bindings = <
&lt 4 TAB  &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &lt 3 RET  &mo 2  &kp RALT
      >;

      label = "QWERTY";
    };

    number {
      bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                        &trans  &trans  &trans    &trans    &trans    &trans
      >;

      label = "NUMBER";
    };

    symbol {
      bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
&trans  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                          &trans    &trans    &trans       &trans     &trans     &trans
      >;

      label = "SYMBOL";
    };

    config {
      bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4         &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SPD                   &rgb_ug RGB_SPI  &trans  &trans
&trans  &trans        &trans        &trans           &bt BT_CLR    &out OUT_TOG         &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFR                   &rgb_ug RGB_EFF  &trans  &trans
&trans  &trans        &trans        &trans           &trans        &trans               &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_COLOR_HSB(188,89,44)  &trans           &trans  &trans
                                    &rgb_ug RGB_TOG  &trans        &ext_power EP_TOG    &trans           &trans           &rgb_ug RGB_TOG
      >;

      label = "CONFIG";
    };

    function {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
      >;

      label = "FUNCTION";
    };
  };
};
