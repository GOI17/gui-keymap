/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "led_count.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
  };

  combos {
    compatible = "zmk,combos";
  };

  macros {
    pwd_macro: pwd_macro {
      compatible = "zmk,behavior-macro";
      label = "PWD_MACRO";
      #binding-cells = <0>;
      bindings = <&kp LS(M) &kp Y &kp LS(N) &kp A &kp M &kp E &kp LS(I) &kp S &kp LS(G) &kp I &kp L &kp B &kp E &kp R &kp T &kp O &kp LS(A) &kp N &kp D &kp LS(M) &kp Y &kp LS(G) &kp I &kp R &kp L &pwd_macro_2>;
    };
    apex_macro: apex_macro {
      compatible = "zmk,behavior-macro";
      label = "APEX_MACRO";
      #binding-cells = <0>;
      bindings = <&kp LS(U) &kp N &kp B &kp R &kp O &kp K &kp E &kp N &kp MINUS &kp LS(J) &kp O &kp L &kp L &kp I &kp N &kp E &kp S &kp S &kp MINUS &kp LS(S) &kp Q &kp U &kp E &kp A &kp L &kp E &kp R &kp AT>;
    };
    apex_it_macro: apex_it_macro {
      compatible = "zmk,behavior-macro";
      label = "APEX_IT_MACRO";
      #binding-cells = <0>;
      bindings = <&kp LS(W) &kp E &kp L &kp C &kp O &kp M &kp E &kp N1>;
    };
    walmart_macro: walmart_macro {
      compatible = "zmk,behavior-macro";
      label = "WALMART_MACRO";
      #binding-cells = <0>;
      bindings = <&kp N6 &kp AMPS &kp LS(N) &kp LS(W) &kp E &kp CARET &kp LS(N) &kp N2 &kp B &kp POUND &kp LS(W) &kp N3 &kp LS(D) &kp DLLR &kp N3 &kp O &kp H>;
    };
    next_app_win: next_app_win {
      compatible = "zmk,behavior-macro";
      label = "NEXT_APP_WIN";
      #binding-cells = <0>;
      bindings = <&kp RA(RC(RIGHT))>;
    };
    pwd_macro_2: pwd_macro_2 {
      compatible = "zmk,behavior-macro";
      label = "PWD_MACRO_2";
      #binding-cells = <0>;
      bindings = <&kp F &kp R &kp I &kp E &kp N &kp D &kp LS(I) &kp S &kp LS(M) &kp E &kp L &kp I &kp S &kp S &kp A>;
    };
    next_app_mac: next_app_mac {
      compatible = "zmk,behavior-macro";
      label = "NEXT_APP_MAC";
      #binding-cells = <0>;
      bindings = <&kp RG(RA(RIGHT))>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    qwerty {
      bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I          &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp RIGHT_ALT
      >;

      label = "QWERTY";
    };

    number {
      bindings = <
&trans        &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp DELETE
&trans        &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&kp CAPSLOCK  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                              &trans  &trans  &trans    &trans    &mo 3     &trans
      >;

      label = "NUMBER";
    };

    symbol {
      bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp DELETE
&trans  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                          &trans    &mo 4     &trans       &trans     &trans     &trans
      >;

      label = "SYMBOL";
    };

    function {
      bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7          &kp F8            &kp F9           &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOL_DN    &kp C_MUTE        &kp C_VOLUME_UP  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT       &trans   &trans   &trans
                        &trans  &trans  &trans    &trans          &trans            &trans
      >;

      label = "FUNCTION";
    };

    config {
      bindings = <
&mo 5   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4         &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SPD                   &rgb_ug RGB_SPI  &trans  &trans
&trans  &trans        &trans        &trans           &bt BT_CLR    &out OUT_TOG         &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFR                   &rgb_ug RGB_EFF  &trans  &trans
&trans  &trans        &trans        &trans           &trans        &trans               &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_COLOR_HSB(188,89,44)  &trans           &trans  &trans
                                    &rgb_ug RGB_TOG  &trans        &ext_power EP_TOG    &trans           &trans           &rgb_ug RGB_TOG
      >;

      label = "CONFIG";
    };

    shortcuts {
      bindings = <
&kp LA(F4)  &trans  &trans  &trans  &next_app_mac  &next_app_win    &pwd_macro  &apex_macro  &apex_it_macro  &walmart_macro  &trans  &kp LC(LS(ESCAPE))
&trans      &trans  &trans  &trans  &trans         &trans           &trans      &trans       &trans          &trans          &trans  &trans
&trans      &trans  &trans  &trans  &trans         &trans           &trans      &trans       &trans          &trans          &trans  &trans
                            &trans  &trans         &trans           &trans      &trans       &trans
      >;

      label = "SHORTCUTS";
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
  };
};
