/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "led_count.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  combos { compatible = "zmk,combos"; };

  keymap {
    compatible = "zmk,keymap";

    qwerty {
      bindings = <
&none  &kp Q  &kp W  &kp E  &kp R     &kp T          &kp Y            &kp U      &kp I      &kp O    &none  &none
&none  &kp A  &kp S  &kp D  &kp F     &kp G          &kp H            &kp J      &kp K      &kp L    &kp P  &none
&none  &kp Z  &kp X  &kp C  &kp V     &kp B          &kp N            &kp M      &kp COMMA  &kp DOT  &none  &none
                     &none  &kp LWIN  &lt 1 SPACE    &lt 2 BACKSPACE  &kp ENTER  &none
      >;

      label = "QWERTY";
    };

    raise {
      bindings = <
&none  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &kp N6     &kp N7    &kp N8    &kp N9     &none   &none
&none  &none   &none   &none   &none   &kp TAB    &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT  &kp N0  &none
&none  &none   &none   &none   &none   &none      &kp SEMI   &kp APOS  &kp FSLH  &kp BSLH   &none   &none
                       &none   &none   &none      &kp ENTER  &none     &none
      >;

      label = "raise";
    };

    lower {
      bindings = <
&none  &none      &none  &none  &none  &kp LBRC    &kp RIGHT_BRACE  &kp UNDERSCORE  &kp MINUS  &kp EQUAL  &none  &none
&none  &none      &none  &none  &none  &kp LPAR    &kp RPAR         &none           &none      &none      &none  &none
&none  &kp GRAVE  &none  &none  &none  &kp LBKT    &kp RBKT         &none           &none      &none      &none  &none
                         &none  &none  &kp ESC     &none            &none           &none
      >;

      label = "lower";
    };
  };

  conditional_layers { compatible = "zmk,conditional-layers"; };
};
